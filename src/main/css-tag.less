// tag 容器收缩成小圆点，hover 时展示
.rem[data-rem-tags~="htag"],
.rem[data-rem-tags="blockquote"],
.rem[data-rem-tags="cite"],
.rem[data-rem-tags="warn"],
.rem[data-rem-tags="idea"],
.rem[data-rem-tags="definition"],
.rem[data-rem-tags="summary"] {
  .hierarchy-editor__tag-bar {
    width: auto;
    right: 0;
    top: 0;
    width: 10px;
    height: 10px;
    background-color: rgb(3, 136, 21);
    border-radius: 50%;
    overflow: hidden;

    .hierarchy-editor__tag-bar__tag {
      display: none;
    }

    &:hover {
      background-color: #fff;
      width: unset;
      height: unset;
      border-radius: unset;
      overflow: unset;
      border-radius: 5px;
      .hierarchy-editor__tag-bar__tag {
        display: inline-flex;
      }
    }
  }
}
// 会有因为断行问题，hover/focus 时宽度变动而抖动的情况，先这样fix
.RichTextViewer {
  overflow-wrap: unset !important;
}

// =============== 美化标签 ===============

// 引用类样式
.quoteTag(@tagName, @borderColor, @bgcolor, @iconUrl, @isBlock) {
  .rem[data-rem-tags~=~"@{tagName}"] > div:first-child .rem-text > div {
    background-color: @bgcolor;
    border-left: 5px solid @borderColor;
    padding: 6px 11px !important;
  }
  .rem[data-rem-tags~="@{tagName}"] {
    > div:first-child .rem-container--compact .rem-text > div {
      margin: -2.5px 0;
    }

    // 加深引用颜色
    .rem-text .RichTextViewer,
    .rem-text [data-slate-node="text"] .quote,
    .rem-reference-container:not([data-rem-tags="emoji"]) .rem-reference-link {
      mix-blend-mode: multiply;
    }
  }

  .block (@isBlock) when (@isBlock = true) {
    display: block;
  }
  .block (@isBlock) when not (@isBlock = true) {
    float: left;
  }

  .prefixIcon (@url) when not (@url = "❝") {
    .rem[data-rem-tags~="@{tagName}"]
      > div:first-child
      .rem-container
      .rem-text
      > div::before {
      content: "";
      mask-image: url(@url);
      mask-repeat: no-repeat;
      mask-size: contain;
      position: relative;
      top: 3px;
      left: -1px;
      width: 20px;
      height: 16px;
      background: @borderColor;
      .block(@isBlock);
    }
  }
  .prefixIcon (@url) when (@url = "❝") {
    .rem[data-rem-tags~="@{tagName}"]
      > div:first-child
      .rem-container
      .rem-text {
      > div::before {
        content: "❝";
        display: block;
        font-size: 20px;
        font-weight: bold;
        position: relative;
        left: 0px;
        .block(@isBlock);
      }
      > div::after {
        content: "❝";
        display: block;
        font-size: 20px;
        font-weight: bold;
        position: relative;
        left: 0px;
        bottom: 0px;
        transform: scaleX(-1) scaleY(-1);
        text-align: right;
        .block(@isBlock);
      }
      > div > div:first-child,
      > div > span:first-child {
        padding-left: 1em;
        display: flex;
      }
    }
  }
  .prefixIcon(@iconUrl);
}

.quoteTag("definition", #ea36a2, #f4cde4, "https://hannesfrank.github.io/remnote-css-rem-types/assets/concept.svg", false);
.quoteTag("blockquote", #6e6e6e, #e8e8e8, "https://hannesfrank.github.io/remnote-css-rem-types/assets/concept.svg", false);
.quoteTag("cite", #6e6e6e, #e8e8e8, "❝", true);
.quoteTag("warn", #f1b13a, #fff8e8, "https://hannesfrank.github.io/remnote-css-rem-types/assets/concept.svg", false);
.quoteTag("idea", #27c208, #e0f2dd, "https://hannesfrank.github.io/remnote-css-rem-types/assets/concept.svg", false);
.quoteTag("summary", #588126, #bfe8b9, "https://hannesfrank.github.io/remnote-css-rem-types/assets/concept.svg", false);
